
package lipid;

unit LipidScoreUnit;

// TODO Include here rules and queries to fulfill the practice requirements

// This is one example of rules that only prints the factorial combination of all pairs eliminating the A-A combination.
rule "Score 1 for lipid pair with increasing RT and carbon count"
when
    $a1 : /annotations [$rt1 : rtMin, $carbonCount1 : lipid.getCarbonCount(), $doubleBondCount : lipid.getDoubleBondsCount()]
    $a2 : /annotations [this!= $a1, lipid.getDoubleBondsCount() == $doubleBondCount, rtMin > $rt1, lipid.getCarbonCount() > $carbonCount1]
then
    // in this case, the only change is the addition of the score, but the fact does not change so we do not break the principle of refractoriness
    $a1.addScore(1);
    $a2.addScore(1);
    // !! TODO ONLY FOR DEBUGGING
    System.out.println("Scored 1 for annotations: " + $a1 + " and " + $a2);
end

//1.1
rule "RT positive - same type, same double bonds, more carbons"
when
    $a1 : /annotations [$type : lipid.lipidType(), $carbons1 : lipid.carbonCount(), $db : lipid.doubleBondsCount(), $rt1 : rtMin]
    $a2 : /annotations [this != $a1, lipid.lipidType() == $type, lipid.carbonCount() < $carbons1, lipid.doubleBondsCount() == $db, rtMin < $rt1]
then
    $a1.addScore(1);
    $a2.addScore(1);
end

//1.2
rule "RT positive - same type, less double bonds, same carbons"
when
    $a1 : /annotations [$type : lipid.lipidType(), $carbons1 : lipid.carbonCount(), $db : lipid.doubleBondsCount(), $rt1 : rtMin]
    $a2 : /annotations [this !=$a1, lipid.lipidType() == $type, lipid.carbonCount() == $carbons1, lipid.doubleBondsCount() > $db, rtMin < $rt1]
then
    $a1.addScore(1);
    $a2.addScore(1);
end

//1.3
rule "RT negative - different type, same carbons/double bonds, RT follows PG < PE < PI < PA < PS < PC"
when
    $a1 : /annotations[ $type1 : lipid.lipidType, $carbons : lipid.carbonCount, $db : lipid.doubleBondsCount,  $rt1 : rtMin]
    $a2 : /annotations[ this != $a1, $type2 : lipid.lipidType(),lipid.carbonCount == $carbons, lipid.doubleBondsCount == $db, rtMin < $rt1 ]
    eval( lipidTypeRank($type1) < lipidTypeRank($type2) )
then
    $a1.addScore(1);
    $a2.addScore(1);
end

//2.1
rule "RT negative - same type, same double bonds, more carbons"
when
    $a1 : /annotations [$type : lipid.lipidType(), $carbons1 : lipid.carbonCount(), $db : lipid.doubleBondsCount(), $rt1 : rtMin]
    $a2 : /annotations [this != $a1, lipid.lipidType() == $type, lipid.carbonCount() < $carbons1, lipid.doubleBondsCount() == $db, rtMin > $rt1]
then
    $a1.addScore(-1);
    $a2.addScore(-1);
end

//2.2
rule "RT negative - same type, less double bonds, same carbons"
when
    $a1 : /annotations [$type : lipid.lipidType(), $carbons1 : lipid.carbonCount(), $db : lipid.doubleBondsCount(), $rt1 : rtMin]
    $a2 : /annotations [this !=$a1, lipid.lipidType() == $type, lipid.carbonCount() == $carbons1, lipid.doubleBondsCount() > $db, rtMin > $rt1]
then
    $a1.addScore(-1);
    $a2.addScore(-1);
end


//2.3
rule "RT negative - different type, same carbons/double bonds, RT follows PG < PE < PI < PA < PS < PC"
when
    $a1 : /annotations[ $type1 : lipid.lipidType, $carbons : lipid.carbonCount, $db : lipid.doubleBondsCount,  $rt1 : rtMin]
    $a2 : /annotations[ this != $a1, $type2 : lipid.lipidType(),lipid.carbonCount == $carbons, lipid.doubleBondsCount == $db, rtMin > $rt1 ]
    eval( lipidTypeRank($type1) < lipidTypeRank($type2) )
then
    $a1.addScore(-1);
    $a2.addScore(-1);
end